Paper ID,Drive Link,Author List,Publication Year,Publisher,Venue,Title,Categories ,Problem Statement,Dataset Used,Techniques Used ,Performance ,Challenges,Future Work
120,https://drive.google.com/file/d/1JsnRHi2gIDg31i78q8AV8T_y6u4HG9Vv/view?usp=sharing,"Anh Tuan Nguyen, Tung Thanh Nguyen, Jafar Al-Kofahi, Hung Viet Nguyen, Tien N. Nguyen",2011,IEEE,ASE,A Topic-based Approach for Narrowing the Search Space of Buggy Files from a Bug Report,Bug Localization,Bug localization is a time-consuming task in large systems due to the high number of files. This paper proposes BugScout to automate this process using topic modeling.,Source code and bug reports from several real-world systems,"Latent Dirichlet Allocation (LDA), Topic modeling",Recommends correct buggy files in up to 45% of cases with a ranked list of 10 files,Managing lexical mismatch between bug reports and code,Further optimization of topic modeling for better accuracy and scalability
87,https://drive.google.com/file/d/1DFHQORchj6HB4X12zFFCp_0oeetovo04/view?usp=sharing,"Jian Zhou, Hongyu Zhang, David Lo",2012,IEEE,ICSE,Where Should the Bugs Be Fixed? More Accurate Information Retrieval-Based Bug Localization Based on Bug Reports,Bug Localization,"Manually locating source code files for bug fixes is costly; this paper proposes BugLocator, which uses IR techniques for locating relevant files from bug reports.","Source code from four open-source projects with over 3,000 bugs","Revised Vector Space Model (rVSM), Latent Dirichlet Allocation (LDA)",BugLocator can locate relevant buggy files with a top-10 ranking for 62.6% of Eclipse 3.1 bugs,Lexical mismatch between bug report descriptions and source code terms,Enhancing the method to improve ranking and accuracy for large projects
80,https://drive.google.com/file/d/1ZqxBvt9yhTUnsuUYrcFKJkzSH-kuTE6i/view?usp=sharing,"Xin Ye, Razvan Bunescu, Chang Liu",2014,ACM,SIGSOFT/FSE,Learning to Rank Relevant Files for Bug Reports Using Domain Knowledge,Bug Localization,This paper introduces a ranking system that uses domain knowledge for locating buggy files from bug reports.,Source code and bug reports from six large open-source Java projects,"Learning-to-rank technique, API documentation, Collaborative filtering",Correctly recommends relevant files in the top 10 for 70% of Eclipse Platform bug reports,Lexical mismatches between natural language bug reports and programming language constructs,Using domain knowledge and API documentation to further improve rankings
74(HyLoc),https://drive.google.com/file/d/17I52dhspmBXlMu1f9bAIIj3el6DW3PAC/view?usp=sharing,"An Ngoc Lam, Anh Tuan Nguyen, Hoan Anh Nguyen, Tien N. Nguyen",2015,IEEE,ASE,Combining Deep Learning with Information Retrieval to Localize Buggy Files for Bug Reports,Bug Localization,HyLoc addresses the lexical mismatch problem in bug localization using deep learning combined with IR techniques.,Source code and bug reports from real-world software projects,"Deep neural networks (DNN), Revised Vector Space Model (rVSM)",Correct buggy file ranked in the top 1 for 50% of bug reports,Lexical mismatch between bug report terms and code tokens,Scaling DNN to handle large-scale projects and datasets
81(NPCNN),https://drive.google.com/file/d/1nSMGaKpHddtj9NM9KbnV_LzOkSiDQ3sc/view?usp=sharing,"Xuan Huo, Ming Li, Zhi-Hua Zhou",2016,IJCAI,IJCAI,Learning Unified Features from Natural and Programming Languages for Locating Buggy Source Code,Bug Localization,Bug localization using unified feature learning from natural and programming languages to bridge lexical and structural gaps.,Source code and bug reports from widely-used software projects,"Convolutional Neural Networks (CNN), Unified feature extraction",Outperforms state-of-the-art methods in locating buggy files,Capturing program structure semantics in feature extraction,Extending the model to more complex program structures and larger projects
25(DNNLoc),https://drive.google.com/file/d/1GYKQu69nWd580M0pCxeuVONReOkRaJle/view?usp=sharing,"An Ngoc Lam, Anh Tuan Nguyen, Hoan Anh Nguyen, Tien N. Nguyen",2017,IEEE,ICPC,Bug Localization with Combination of Deep Learning and Information Retrieval,Bug Localization,"Proposes DNNLoc, a method that combines deep learning and IR to bridge the lexical mismatch gap in bug localization.",Bug reports and source code from open-source projects,"Deep neural networks (DNN), Revised Vector Space Model (rVSM)",Correctly identifies buggy files within top 1 for 50% of cases,Lexical mismatch between bug report and code terminology,Further improving the model's scalability and precision
26(DeepLocator),https://drive.google.com/file/d/1rzwHbUvk32LhEKpVxBB61frYTtf_I1Gg/view?usp=sharing,"Yan Xiao, Jacky Keung, Qing Mi, Kwabena E. Bennin",2017,IEEE,APSEC,Improving Bug Localization with an Enhanced Convolutional Neural Network,Bug Localization,Existing bug localization approaches do not fully utilize semantic information in bug reports and source code,"Bug reports from AspectJ, Eclipse, JDT, SWT, Tomcat","CNN, rTF-IDF, word2vec",9.77% to 26.65% higher F-measure than conventional CNN,Handling lexical gap between bug reports and source code,Improving performance in large-scale software projects​
73,https://drive.google.com/file/d/1Ex3yoXzi_xwiLTrINCEJE1G4twBcwqpL/view?usp=sharing,"Pablo Loyola, Kugamoorthy Gajananan, Fumiko Satoh",2018,ACM,CIKM,Bug Localization by Learning to Rank and Represent Bug Inducing Changes,Bug Localization,Bug localization modeled as learning feature representations from source changes extracted from project history,Real-world software projects,"Feature learning, ranking, syntactic and code change dependency representations",Competitive results in both intra- and cross-project settings,Addressing unbalanced datasets for bug reports and source code changes,Extending the model for more complex project histories​
101(DeepBugs),https://drive.google.com/file/d/1vdFBxBxwNnC2Aw6dMvOSL7iMqdiyhDbB/view?usp=sharing,"Michael Pradel, Koushik Sen",2018,ACM,FSE,DeepBugs: A Learning Approach to Name-based Bug Detection,Bug Localization,"Most bug detection tools ignore the information conveyed by variable and function names, missing certain classes of bugs","150,000 JavaScript files","Machine learning, binary classification, embeddings","Detects name-based bugs with 89-95% accuracy, revealing 102 programming mistakes",Lexical gap between correct and incorrect identifier names,Expanding name-based bug detection to other types of mistakes and programming languages​
75,https://drive.google.com/file/d/13G7W_jM1AsHx0uvPHn2EFflfKC4WRsZx/view?usp=sharing,"Sravya Polisetty, Andriy Miranskyy, Ayşe Başar",2019,ACM,PROMISE,On Usefulness of the Deep-Learning-Based Bug Localization Models to Practitioners,Bug Localization,Investigating whether deep learning models for bug localization meet the expectations of practitioners,Five open-source Java projects,"CNN, Logistic Regression","Deep learning models perform better than traditional ML, but only partially meet practitioner expectations",Addressing the limitations of deep learning models in practical production environments,Standardization of performance benchmarks​
76(DeepLoc),https://drive.google.com/file/d/140RoClceLqKe9wa5fsT6FmeBV1KraXoF/view?usp=sharing,"Yan Xiao, Jacky Keung, Kwabena E. Bennin, Qing Mi",2019,Elsevier,IST,Improving Bug Localization with Word Embedding and Enhanced CNN,Bug Localization,Semantic information in bug reports and source code is underutilized in current bug localization approaches,"18,500 bug reports from AspectJ, Eclipse, JDT, SWT, Tomcat","CNN, word embedding, feature detection",10.87%-13.4% higher MAP than conventional CNN,Handling lexical gap between bug reports and source code,Enhancing word embeddings and feature detection techniques​
79,https://drive.google.com/file/d/1q1E5PrZMXGGECv2cEigL6W01mzRGNFlo/view?usp=sharing,"Guangliang Liu, Yang Lu, Ke Shi, Jingfei Chang, Xing Wei",2019,IEEE,IEEE Access,Convolutional Neural Networks-Based Locating Relevant Buggy Code Files for Bug Reports Affected by Data Imbalance,Bug Localization,Solving the lexical gap between bug reports and source code for improved bug localization,Bug reports from large software projects,"CNN, surface lexical correlation, semantic correlation, focal loss",High bug localization performance compared to classic methods,Addressing data imbalance in bug localization,Combining surface lexical and semantic correlation for more accurate bug localization​
116(CAST),https://drive.google.com/file/d/1yzkFwYR8YT0C9xVOgFj2A5nrqCEOt_xS/view?usp=sharing,"Hongliang Liang, Lu Sun, Meilin Wang, Yuxing Yang",2019,IEEE,IEEE Access,Deep Learning With Customized Abstract Syntax Tree for Bug Localization,Bug Localization,Existing bug localization approaches fail to fully utilize structural and semantic information in source code,"Bug reports from AspectJ, JDT, SWT, Tomcat","CNN, AST, TBCNN",Outperforms state-of-the-art methods in locating buggy source files,Handling the hierarchical structure of programming languages in bug localization,Leveraging customized ASTs to improve accuracy and learning performance​
77(KGBugLocator),https://drive.google.com/file/d/1QQzqNcpRNrqEf8N4JBZdF892SSoc8X9h/view?usp=sharing,"Jinglei Zhang, Rui Xie, Wei Ye, Yuhan Zhang, Shikun Zhang",2020,ACM,ICPC,Exploiting Code Knowledge Graph for Bug Localization via Bi-Directional Attention,Bug Localization,Existing bug localization techniques fail to fully utilize interrelations within and across source files,Four large open-source software projects,"Knowledge graph embeddings, bi-directional attention",Outperforms previous bug localization models on real-world datasets,Capturing the interrelations between source files for improved bug localization,Extending knowledge graph embeddings for larger and more complex projects​
68,https://drive.google.com/file/d/1eR7DT3mit5sKGjCQD88pymEmf6zAABxG/view?usp=sharing,"Shasha Cheng, Xuefeng Yan, Arif Ali Khan",2020,IEEE,QRS,A Similarity Integration Method based Information Retrieval and Word Embedding in Bug Localization,Bug Localization,Lexical mismatch between bug reports and source code affects bug localization accuracy,Bug reports from large software projects,"IR, word embedding, DNN","Outperforms existing bug localization models in terms of Top N Rank, MAP, and MRR",Addressing the lexical mismatch between natural language bug reports and programming language source code,Integrating semantic and textual similarity for more accurate bug localization​
65(DeMoB),https://drive.google.com/file/d/1elzI9ScR72_PU3tEDQLL3MM1NSHIZCl8/view?usp=sharing,"Ziye Zhu, Yun Li, Yu Wang, Yaojing Wang, Hanghang Tong",2021,Springer,Data Mining and Knowledge Discovery,A Deep Multimodal Model for Bug Localization,Bug Localization,"Addressing subtle differences between natural language and programming language, noise in bug reports, and multi-grained features in source code.",Large-scale real-world datasets from open-source projects,"Deep multimodal model, attention mechanism, dynamic CNN",Outperforms existing techniques on four real-world datasets,Handling noisy bug reports and multi-grained source code information,Extending the model to handle more complex bug localization cases​
67(DreamLoc),https://drive.google.com/file/d/1KXI37uJ5ecA_uCAaRwYI_TEQ27T60BCj/view?usp=sharing,"Binhang Qi, Hailong Sun, Wei Yuan, Hongyu Zhang, Xiangxin Meng",2021,IEEE,Transactions on Reliability,DreamLoc: A Deep Relevance Matching-Based Framework for Bug Localization,Bug Localization,Bridging the lexical gap in bug localization using relevance matching models,Five benchmark datasets,"Deep learning, attention mechanism, relevance matching","Outperforms five state-of-the-art models in Accuracy@10, MAP, and MRR",Building accurate representations for entire bug reports and source files,Enhancing relevance matching models for complex bug reports​
43(CoLoc),https://drive.google.com/file/d/1v3dQ-w0Wzj_UcYHUw46zuOY7gCaa2Ob8/view?usp=sharing,"Zhengmao Luo, Wenyao Wang, Caichun Cen",2022,IEEE,IEEE Access,Improving Bug Localization With Effective Contrastive Learning Representation,Bug Localization,Simple neural architectures struggle to capture deep contextual features from bug reports,"18,500 bug reports from real-world projects","Contrastive learning, pre-trained language models, deep self-attention networks",Outperforms baseline approaches by up to 76.00% in MRR,Capturing semantic interaction between bug reports and source code,Expanding contrastive learning for more diverse software projects​
46(SBugLocater),https://drive.google.com/file/d/1L-ZX03l-eP7EiU_SkgtJO3M1dMwbWAdL/view?usp=sharing,"Xuxiang Huang, Chen Xiang, Hua Li, Peng He",2022,Hindawi,Mathematical Problems in Engineering,SBugLocater: Bug Localization Based on Deep Matching and Information Retrieval,Bug Localization,Addressing mismatches between bug reports and source files by combining deep matching and IR techniques,Four benchmark datasets,"Deep matching, IR, collaborative filtering","Improved Accuracy@10, MAP, and MRR by 6.9%, 13.9%, and 17% respectively compared to baselines",Low matching scores for short bug reports,Enhancing the model for large-scale software projects​
66(FBL-BERT),https://drive.google.com/file/d/1jd1W8xXrjsQT9aU1RbokF1v6_i_J7ma2/view?usp=sharing,"Agnieszka Ciborowska, Kostadin Damevski",2022,ACM,ICSE,Fast Changeset-Based Bug Localization with BERT,Bug Localization,Bridging the lexical gap between bug reports and changesets using transformer models like BERT,Source code changesets from software repositories,"BERT, IR, sentence embedding",Improved retrieval accuracy by 5.5%-20.6% for bug reports with limited localization hints,Computational expense of BERT models,Optimizing BERT for faster and more accurate bug localization​
117,https://drive.google.com/file/d/1v3NRVg8RT0ectrftUARWEBA6PZD2qd-D/view?usp=sharing,"Xuefeng Yan, Shasha Cheng, Liqin Guo",2023,Science Press,Journal of Systems Engineering and Electronics,Bug Localization Based on Syntactical and Semantic Information of Source Code,Bug Localization,Loss of syntactical and structural information in source code when treated as natural language,Bug reports and source code from real-world projects,"Abstract syntax tree (AST), code representation, deep learning","Improved MRR, MAP, and Top N Rank compared to standard models",Handling complex control flow in source code,Enhancing the model to incorporate more structured information​
118,https://drive.google.com/file/d/19g0j9h8bTUsC3Dy4k4861hQ-URtxxf64/view?usp=sharing,"Alisson Solitto da Silva, Rogério Eduardo Garcia, Leonardo Castro Botega",2023,IEEE,IEEE Access,Bug Localization Model in Source Code Using Ontologies,Bug Localization,Enhancing bug localization using semantic architectural knowledge through ontologies,Open-source CSharp projects,"Ontologies, semantic similarity, machine learning",Improved accuracy and efficiency in bug localization across six open-source projects,Managing the complexity of semantic structures in large projects,Expanding ontology-based approaches for more programming languages​
119,https://drive.google.com/file/d/1QJ4jWHrr0U5CJRxAQ6Cb-LO-NAPnAX2F/view?usp=sharing,"Amr Mansour Mohsen, Hesham A. Hassan, Khaled T. Wassif, Ramadan Moawad, Soha H. Makady",2023,IEEE,IEEE Access,Enhancing Bug Localization Using Phase-Based Approach,Bug Localization,Overcoming time and accuracy limitations in existing bug localization techniques,Bug reports and source code from two datasets,"Phase-based approach, BERT, package classification",Achieved significant improvements in time and accuracy for bug localization,Handling limited bug localization artifacts and context mismatch,Refining the approach for larger and more complex datasets​
33(Yakusu),https://drive.google.com/file/d/1_64x_waJGkxE_fyssmFPw3oIy6HRxvUF/view?usp=sharing,"Mattia Fazzini, Martin Prammer, Marcelo d’Amorim, Alessandro Orso",2018,ACM,ISSTA'18,Automatically Translating Bug Reports into Test Cases for Mobile Apps,Bug Reproduction,"The difficulty in manually analyzing bug reports and translating them into executable test cases for mobile apps, which is time-consuming and error-prone.","1,038 crash bug reports from Android apps","NLP techniques, GUI-based deep learning models",Translated bug reports with 78.3% containing reproducing steps.,"Handling incomplete or imprecise reproducing steps, special cases like rotation.",Improve performance in translating different types of app crashes and enhancing accuracy of the generated test cases.
3(Euler),https://drive.google.com/file/d/10ztIcs8BV8s6Lx0JDF-OJrwiXgWiCYSW/view?usp=sharing,"Oscar Chaparro, Carlos Bernal-Cárdenas, Jing Lu, Kevin Moran, Andrian Marcus, Massimiliano Di Penta, Denys Poshyvanyk, Vincent Ng",2019,ACM,ESEC/FSE'19,Assessing the Quality of the Steps to Reproduce in Bug Reports,Bug Reproduction,"Ensuring the quality of the steps to reproduce bugs in user-submitted bug reports, as low-quality steps lead to non-reproducible or unresolved bugs.",Defects4J bug repository,"NLP techniques, machine learning models",Assessed over 100 bug reports with 74% reproduction success.,Evaluating under limited natural language processing capabilities.,Future work will improve robustness in handling low-quality bug reports and missing reproducing steps.
40(ReCDroid),https://drive.google.com/file/d/106jM5vBXiUNuNoBI-Ect1I5EmDb8WNiv/view?usp=sharing,"Yu Zhao, Tingting Yu, Ting Su, Yang Liu, Wei Zheng, Jingzhi Zhang, William G.J. Halfond",2019,IEEE,ICSE'19,ReCDroid: Automatically Reproducing Android Application Crashes from Bug Reports,Bug Reproduction,"Automatically reproducing Android app crashes from bug reports written in natural language, which are often incomplete or ambiguous.",66 bug reports from GitHub and Google Code,"ReCDroid, dynamic GUI exploration, NLP-based sentence analysis",Successfully reproduced 63.6% of crashes from bug reports with a success rate of 63%.,"Dealing with natural language ambiguity, incomplete or missing steps in bug reports.",Explore further GUI-based reproduction accuracy and how to handle ambiguous language in bug reports.
47(S2RMiner),https://drive.google.com/file/d/17zbDDI1ZVZxSTXoOHVf3o0uSQrFG9K9-/view?usp=sharing,"Yu Zhao, Kye Miller, Tingting Yu, Wei Zheng, Minchao Pu",2019,Springer,ICSR'19,Automatically Extracting Bug Reproducing Steps from Android Bug Reports,Bug Reproduction,Extracting bug reproducing steps automatically from natural language bug reports to generate scripts for reproducing bugs in Android apps.,"GitHub, Google Code, and F-droid repositories","NLP-based extraction, stemmed words analysis","Accuracy: over 85%, Precision: 69%, Recall: 62%.",Overcoming false positives/negatives in classification and handling incomplete bug report steps.,"Focus on expanding to other app platforms, improve extraction quality for complex steps."
48(RepRev),https://drive.google.com/file/d/1LGj22bIrlx1tMdYV4nnfY6mtusDC0DEe/view?usp=sharing,"Shuyue Li, Jiaqi Guo, Ming Fan, Jian-Guang Lou, Qinghua Zheng, Ting Liu",2020,ACM,ICSE-SEIP'20,Automated Bug Reproduction from User Reviews for Android Applications,Bug Reproduction,"Automating the process of reproducing bugs from user reviews for Android apps, which are often noisy and lack detailed reproduction steps.",292 user reviews from open-source Android apps,"Review parsing, GUI matching, manual crash reproduction","23.2% of reviews were successfully reproduced in crashes, low success rate due to limited device information in reviews.",Extracting accurate reproduction information from noisy user reviews and lack of app/device version details.,"Work on automated solutions for better capturing useful information from user reviews and improve success rates by leveraging additional context, like device and OS information."
58(EBug),https://drive.google.com/file/d/1qcl7widNyBfm0CtF47QdV3LGfF6e5hpg/view?usp=sharing,"Mattia Fazzini, Kevin Moran, Carlos Bernal-Cárdenas, Tyler Wendland, Alessandro Orso, Denys Poshyvanyk",2022,IEEE,IEEE Transactions on Software Engineering,Enhancing Mobile App Bug Reporting via Real-time Understanding of Reproduction Steps,Bug Reproduction,Enhancing the process of mobile app bug reporting by offering real-time suggestions to help users write clearer and more reproducible bug reports.,20 bug reports from real-world apps,"Real-time analysis, static and dynamic program analysis, predictive models",EBUG users created bug reports 31% faster with 63% improvement in reproducibility compared to the baseline.,Balancing ease of use with detail in bug reporting and bridging the lexical gap between reporters and developers.,Extend the reporting system to reduce more manual input and improve accuracy in predicting future reproducing steps.
49(ReCDroid+),https://drive.google.com/file/d/1Vxy8cJvYYwmHoxxQQHrQ4zoibzyyhxQ2/view?usp=sharing,"Yu Zhao, Ting Su, Yang Liu, Wei Zheng, Xiaoxue Wu, Ramakanth Kavuluru, William G.J. Halfond, Tingting Yu",2022,ACM,ACM Transactions on Software Engineering,ReCDroid+: Automated End-to-End Crash Reproduction from Bug Reports for Android Apps,Bug Reproduction,Improving crash reproduction in Android apps by automating the extraction of steps to reproduce from natural language bug reports.,"66 bug reports, manually labeled S2R sentences from 4,000 reports","NLP dependency parsing, deep learning model for S2R extraction, word embeddings, Q-learning for GUI event sequence matching","Achieved 63.6% success in reproducing crashes, F-measure over 0.7 for S2R extraction.","Handling missing steps in bug reports, identifying the correct sequence of GUI events to reproduce crashes.",Incorporate more robust techniques for handling incomplete bug reports and further improve crash reproduction rates.
14(LIBRO),https://drive.google.com/file/d/1Ll3WlCVCEluGzX47RDb7GDmkPJYRLaOF/view?usp=sharing,"Sungmin Kang, Juyeon Yoon, Shin Yoo",2023,ACM,ISSTA'23,Large Language Models are Few-shot Testers: Exploring LLM-based General Bug Reproduction,Bug Reproduction,Leveraging large language models to automatically generate test cases for reproducing bugs based on natural language bug reports.,"Defects4J benchmark, custom bug report dataset","Large language model, Codex, natural language understanding, ranking heuristics","Reproduced 33.5% of bugs from Defects4J, successfully deduced reproducing test accuracy 71.4% of the time.",Handling complex bug reports and improving test generation for crash bugs.,Improve accuracy of bug reproducing tests and reduce resource consumption in generating reliable tests through better ranking heuristics and reinforcement learning techniques.
54,https://drive.google.com/file/d/1BiIX2JSDaP_8IO1iNADNBw2Xs9YoGCv1/view?usp=sharing,"Zhaoxu Zhang, Robert Winn, Yu Zhao, Tingting Yu, William G.J. Halfond",2023,ACM,ISSTA,Automatically Reproducing Android Bug Reports using NLP and Reinforcement Learning,Bug Report Analysis,Addressing the challenge of reproducing Android crashes due to imprecise or missing steps in bug reports,77 real-world Android bug reports,"Natural Language Processing (NLP), Reinforcement Learning","Achieved 67% precision and 77% recall in extracting steps, reproducing 74% of bug reports",Handling missing or inaccurate reproduction steps in bug reports,Extending reproduction techniques to more diverse apps​
82,https://drive.google.com/file/d/1Y5E4ii0IeDiDrRRIa7etI4b3gilWEWch/view?usp=sharing,"Chengnian Sun, David Lo, Siau-Cheng Khoo, Jing Jiang",2011,IEEE,ICSE,Towards More Accurate Retrieval of Duplicate Bug Reports,Bug Report Analysis,"Proposing a retrieval function (REP) to measure similarity between bug reports, improving accuracy in detecting duplicate reports","Mozilla, Eclipse, OpenOffice","Extended BM25F, stochastic gradient descent, duplicate retrieval","Achieved 10-27% improvement in recall rate@k, 17-23% improvement in mean average precision",Reducing duplicate reports and improving triaging efficiency,Extending retrieval techniques to other software projects​
38,https://drive.google.com/file/d/1Y-hrzxuXsunc3UTy_dM_xRjFZC4epeXs/view?usp=sharing,"Nachai Limsettho, Hideaki Hata, Akito Monden, Kenichi Matsumoto",2014,IEEE,IWESEP,Automatic Unsupervised Bug Report Categorization,Bug Report Analysis,Categorizing bug reports automatically based on their hidden characteristics using unsupervised learning,Bug reports from real-world projects,"Hierarchical Dirichlet Process (HDP), clustering, NLP chunking",Achieved performance comparable to supervised learning approaches,Labeling clusters with meaningful names using automatic techniques,Extending cluster labeling techniques to improve categorization​
19,https://drive.google.com/file/d/1W18xQaOWSKM6XC7F2oR6DzVwguKgc4AL/view?usp=sharing,"Ramin Shokripour, John Anvik, Zarinah M. Kasirun, Sima Zamani",2015,Elsevier,Journal of Systems and Software,A Time-Based Approach to Automatic Bug Report Assignment,Bug Report Analysis,Improving bug assignment accuracy by incorporating time-based metadata in term weighting techniques,Three open-source projects,"Time-tf-idf, term weighting, machine learning","Achieved 11.8% accuracy improvement, 8.94% improvement in mean reciprocal rank",Handling term weighting for bug report assignment,Extending the technique to other metadata and larger datasets​
52(FUSION),https://drive.google.com/file/d/1Br2Wq817mMbYcg6TXuKX9mI6MLt_TZ6j/view?usp=sharing,"Kevin Moran, Mario Linares-Vásquez, Carlos Bernal-Cárdenas, Denys Poshyvanyk",2015,ACM,ESEC/FSE,Auto-completing Bug Reports for Android Applications,Bug Report Analysis,"The paper addresses the difficulty in creating complete bug reports, particularly in providing reproducible steps for mobile apps. It introduces FUSION to automate this.",Bug reports from real-world Android applications,Static and dynamic analysis,Improved report quality with better reproducibility,Lexical gap between reporters and developers,Expanding FUSION’s support to more app platforms and enhancing reporting functionality
20,https://drive.google.com/file/d/1k6jRrw0nTKPC0HDGIoCyP6zzZkmsPP3F/view?usp=sharing,"Tao Zhang, Jiachi Chen, Geunseok Yang, Byungjeong Lee, Xiapu Luo",2016,	Elsevier,Journal of Systems       , Towards More Accurate Severity Prediction and Fixer Recommendation,Bug Report Analysis,"The paper focuses on enhancing severity prediction and fixer recommendation for bugs, reducing manual workload and errors in the triaging process.","Bug reports from Eclipse, NetBeans, Mozilla, OpenOffice","Modified REP, K-Nearest Neighbor (KNN), LDA",Improved accuracy over state-of-the-art benchmarks,Large number of bug reports and varying report quality,Extending approach to support other software repositories and improve handling of multi-field information
83,https://drive.google.com/file/d/1qliFYkT77d6dvzfHlV8VaqKEpoWyLtXi/view?usp=sharing,Minhaz F. Zibran,2016,ACM,ICSE	,On the Effectiveness of Labeled Latent Dirichlet Allocation in Automatic Bug-Report Categorization,Bug Report Analysis,This work evaluates the use of Labeled Latent Dirichlet Allocation (LLDA) for automatic bug-report categorization into predefined categories to aid in large-scale analyses.,"Bug reports from Eclipse, GNOME, and Python projects",Labeled Latent Dirichlet Allocation (LLDA),Accuracy improved with larger training datasets,Dependency on high-quality labeled data,Increasing dataset size for better LLDA training and exploring new topic modeling techniques
106(buggram),https://drive.google.com/file/d/16CCfjYxfGItFatxJasBNevp8WDrFq8AP/view?usp=sharing,"Song Wang, Devin Chollak, Dana Movshovitz-Attias, Lin Tan",2016,ACM,ASE,Bugram: Bug Detection with N-gram Language Models,Bug Report Analysis,Detecting bugs using n-gram models to identify uncommon code sequences in software projects,16 open-source Java projects,"N-gram language model, Markov model","Detected 42 bugs, 23 undetected by existing techniques",Handling low-frequency sequences that indicate bugs,Extending the model for other programming languages and bug types​
50,https://drive.google.com/file/d/10a2iir6xINfxVmKIYIAPmtWxXwVJRZZZ/view?usp=sharing,"Oscar Chaparro, Jing Lu, Fiorella Zampetti, Laura Moreno, Massimiliano Di Penta, Andrian Marcus, Gabriele Bavota, Vincent Ng",2017,ACM,ESEC/FSE,Detecting Missing Information in Bug Descriptions,Bug Report Analysis,Detecting missing expected behavior and steps to reproduce in bug reports using automated approaches,"2,912 bug reports from nine software projects","Discourse analysis, NLP, machine learning","Detected missing information with 85.9% precision, 93.2% recall for expected behavior",Handling incomplete and ambiguous bug descriptions,Improving detection techniques for more accurate bug triaging​
62,https://drive.google.com/file/d/1hAEP5jPyZOzJlPyM5rLkjRkpeNBZ7Z0p/view?usp=sharing,Oscar Chaparro,2017,ACM,ICSE,"Improving Bug Reporting, Duplicate Detection, and Localization",Bug Report Analysis,Improving bug report quality and localization through text retrieval,"2,912 bug reports from 9 software systems","Discourse analysis, Natural Language Processing (NLP), Text Retrieval",Improved accuracy in bug localization and duplicate detection,Handling low-quality content in bug reports,Exploring better discourse recommendations for reporters​
63,https://drive.google.com/file/d/1HJ10DbfpVStyRT3YefNLvZEs6x8eCw42/view?usp=sharing,"Xiaoxue Ren, Qiao Huang, Xin Xia, Zhenchang Xing, Lingfeng Bao, David Lo",2018,IEEE,ICSE,Characterizing Common and Domain-Specific Package Bugs: A Case Study on Ubuntu,Bug Report Analysis,Identifying common and domain-specific package bugs in Ubuntu,"240,097 bug reports from Ubuntu","Topic modeling, empirical study",Improved understanding of package-related bugs in Ubuntu,Handling coarse-grained tags and limited granularity in bug reports,Extending the approach to other Linux distributions​
84,https://drive.google.com/file/d/1OyCKGFUc4yDiea5DL4jcytPhiCX9kIoz/view?usp=sharing,"Cheng Zhou, Bin Li, Xiaobing Sun, Hongjing Guo",2018,ACM,ICPC,Recognizing Software Bug-Specific Named Entity in Software Bug Repository,Bug Report Analysis,Addressing the challenge of named entity recognition in software bug reports using mixed language,Mozilla and Eclipse bug reports,"Conditional Random Fields (CRF), word embedding",Achieved higher accuracy for named entity recognition in cross-project evaluation,Handling mixed language and ambiguity in bug reports,Extending NER models to improve performance across different projects​
31,https://drive.google.com/file/d/1dwSao6nx9dvinyWp9BuzFLDbgr8zC0dS/view?usp=sharing,"Xuan Feng, Xiaojing Liao, XiaoFeng Wang, Haining Wang, Qiang Li, Kai Yang, Hongsong Zhu, Limin Sun",2019,IEEE,NDSS,Understanding and Securing Device Vulnerabilities through Automated Bug Report Analysis,Bug Report Analysis,Using NLP to collect and analyze security-related bug reports for IoT devices,"7,500 security reports from bug-reporting platforms","Natural Language Processing (NLP), machine learning",Automatically generated signatures to defend against IoT attacks,Managing scattered vulnerability reports and incomplete data,Improving defense mechanisms against evolving IoT attacks
69,https://drive.google.com/file/d/19qqwoPGynY3zqX6hVj6MOk9ZIJYHknN7/view?usp=sharing,"Yang Song, Oscar Chaparro",2020,ACM,ESEC/FSE,BEE: A Tool for Structuring and Analyzing Bug Reports,Bug Report Analysis,"Developing a tool to structure and analyze bug reports by detecting essential elements (OB, EB, S2R)","More than 5,000 bug reports","Machine learning, text analysis",Achieved high accuracy in detecting essential bug elements and missing information,Handling incomplete and ambiguous bug reports,Expanding the tool to support more software projects and bug report formats​
29,https://drive.google.com/file/d/1BZijzLtclRJw5pdiHfXHciCf-rN4WOAX/view?usp=sharing,"Hafiza Anisa Ahmed, Narmeen Zakaria Bawany, Jawwad Ahmed Shamsi",2021,IEEE,IEEE Access,CaPBug: A Framework for Automatic Bug Categorization and Prioritization Using NLP and Machine Learning,Bug Report Analysis,Automating bug categorization and prioritization using machine learning,Mozilla and Eclipse repositories,"NLP, Random Forest, Decision Tree, SMOTE",Achieved 88.78% accuracy for categorization and 90.43% for prioritization,Handling class imbalance in priority classes,Extending the framework to other bug repositories and priority systems
59,https://drive.google.com/file/d/1Yu7GO4llQdbJKsMwSNKYgeJcB3rRzX9Z/view?usp=sharing,"Fiorella Artuso, Giuseppe Antonio Di Luna, Leonardo Querzoni",2022,IEEE,IEEE Access,Debugging Debug Information With Neural Networks,Bug Report Analysis,Investigating the feasibility of using DNNs to discover incorrect debug information in optimized binaries,Synthetic and real datasets from LLVM toolchain,"Deep Neural Networks, NLP",Detected 12 unknown bugs in the LLVM toolchain,Handling optimization-induced bugs in debug information,Expanding model applicability to other toolchains
64,https://drive.google.com/file/d/1AhQO2dcNgGXIhmQAJ1MLLFQ9uLDZQUR7/view?usp=sharing,"Thomas Hirsch, Birgit Hofer",2022,Springer,Automated Software Engineering,Detecting Non-Natural Language Artifacts for De-Noising Bug Reports,Bug Report Analysis,Classifying textual content in bug reports as natural language or non-natural language artifacts to improve NLP applications,"GitHub issue tickets (C++, Java, JavaScript, PHP, Python)","Machine learning, artifact classification",Achieved ROC-AUC scores between 0.92-0.96,Handling noise in issue tickets across multiple languages,Extending models to more diverse projects and languages​
107,https://drive.google.com/file/d/1zMQ0toDlmzbGj34585L8IUDaPC6HxfMF/view?usp=sharing,"Avinash Patil, Aryan Jadon",2022,IEEE,IEEE ICSE,Auto-labelling of Bug Report using Natural Language Processing,Bug Report Analysis,Developing a system to auto-label duplicate bug reports using NLP techniques,Bug reports from multiple sources,"NLP, deep neural networks",Achieved 70% recall for duplicate bug detection,Handling differences in bug descriptions from different users,Extending the system to handle larger datasets​
108,https://drive.google.com/file/d/1_gLuqtiJq3IBgDovAKQWv8h4rz9Z78l7/view?usp=sharing,"Cristian Robledo, Francesca Sallicati, Gaël de Chalendar, Marcos Fernández, Pablo de Castro, Eduardo Martín, Javier Gutiérrez, Yannis Bouachera",2022,Open Research Europe,Open Research Europe,"An Open-Source Natural Language Processing Toolkit to Support Software Development: Addressing Automatic Bug Detection, Code Summarisation, and Code Search",Bug Report Analysis,"Introducing an NLP toolkit to automate bug detection, code summarization, and code search in software development","Java, C, and C++ datasets","NLP, transformer models, deep learning",Improved productivity by automating bug detection and code search,Handling diverse programming languages in bug detection and summarization,Extending toolkit for more programming languages and use cases​
97,https://drive.google.com/file/d/1RGeFWP9xnSaqb6jGj4J-Ow1sbkrfyfWM/view?usp=sharing,"Haruna Isotani, Hironori Washizaki, Yoshiaki Fukazawa, Tsutomu Nomoto, Saori Ouji, Shinobu Saito",2023,Frontiers,Frontiers in Computer Science,Sentence Embedding and Fine-Tuning to Automatically Identify Duplicate Bugs,Bug Report Analysis,Identifying duplicate bug reports using sentence embedding and fine-tuned Sentence-BERT,NTT Corporation’s bug reports,"Sentence-BERT, deep learning",Achieved improved accuracy in detecting duplicate bug reports,Handling variations in bug report content descriptions,Extending the system for more complex bug reports